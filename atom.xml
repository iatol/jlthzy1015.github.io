<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jlthzy&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://qaz.jlthzy.cc/"/>
  <updated>2020-04-09T10:11:51.542Z</updated>
  <id>http://qaz.jlthzy.cc/</id>
  
  <author>
    <name>Jlthzy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NLP Week1</title>
    <link href="http://qaz.jlthzy.cc/2020/04/09/NLP_week1/"/>
    <id>http://qaz.jlthzy.cc/2020/04/09/NLP_week1/</id>
    <published>2020-04-09T10:08:20.688Z</published>
    <updated>2020-04-09T10:11:51.542Z</updated>
    
    <content type="html"><![CDATA[<p>NLP课程week1实验</p><h2 id="总述"><a href="#总述" class="headerlink" title="总述"></a>总述</h2><h4 id="PS-代码写得比较散-封装一下会好看些嘿嘿"><a href="#PS-代码写得比较散-封装一下会好看些嘿嘿" class="headerlink" title="PS 代码写得比较散 封装一下会好看些嘿嘿"></a>PS 代码写得比较散 封装一下会好看些嘿嘿</h4><h4 id="第一周的实验都不太难，要求如下："><a href="#第一周的实验都不太难，要求如下：" class="headerlink" title="第一周的实验都不太难，要求如下："></a>第一周的实验都不太难，要求如下：</h4><h4 id="1-汉字字频统计"><a href="#1-汉字字频统计" class="headerlink" title="1. 汉字字频统计"></a>1. 汉字字频统计</h4><p>1.1 给出前100个汉字高频字的频率统计结果<br>1.2 分别给出1、20、100、600、2000、3000汉字的字频总合<br>1.3 计算汉字的熵值</p><h4 id="2-英文词频统计"><a href="#2-英文词频统计" class="headerlink" title="2.英文词频统计"></a>2.英文词频统计</h4><p>2.1 给出前100个高频单词的频率统计结果<br>2.2 分别给出1、20、100、600、2000、3000单词的字频总合<br>2.3 计算单词的熵值</p><h4 id="3-针对不同规模的语料重复上述实验"><a href="#3-针对不同规模的语料重复上述实验" class="headerlink" title="3. 针对不同规模的语料重复上述实验"></a>3. 针对不同规模的语料重复上述实验</h4><h4 id="4-中文语料来自繁体字版本《孟子》，英文语料来自《哈姆雷特》英文版"><a href="#4-中文语料来自繁体字版本《孟子》，英文语料来自《哈姆雷特》英文版" class="headerlink" title="4.中文语料来自繁体字版本《孟子》，英文语料来自《哈姆雷特》英文版"></a>4.中文语料来自繁体字版本《孟子》，英文语料来自《哈姆雷特》英文版</h4><p>语料下载地址如下<br><a href="https://jlthzy.cc" target="_blank" rel="noopener" title="点我下载孟子">点我下载孟子</a><br><a href="https://jlthzy.cc" target="_blank" rel="noopener" title="点我下载哈姆雷特">点我下载哈姆雷特</a></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><h4 id="1-汉字"><a href="#1-汉字" class="headerlink" title="1.汉字"></a>1.汉字</h4><p>读取文档，统计文章字数和字种数</p><pre><code>def loadData(filename):    f = open(filename, &#39;r&#39;, encoding=&#39;utf-8&#39;)    text=f.read()    #去掉文档中的标点符号    for ch in &quot;《》，。：!‧「」『』〈〉；﹖.！ \n？、&quot;:        text = text.replace(ch, &quot;&quot;)#     print(&quot;文章总体长度：&quot;, len(text))    result = set(text)#     print(&quot;字种数:&quot;, len(result))    return text#a=loadData(&#39;ex_menzi.txt&#39;)</code></pre><p>统计每个字的字频</p><pre><code>def sta_word(filename):    my_dict={}    text=loadData(filename)    for char in text:        #在，频率就+1        if char in my_dict:            my_dict[char] = my_dict[char]+1        #不在，就创建一个位置给它        else:            my_dict[char] = 1    return my_dict#print(sta_word(&#39;ex_menzi.txt&#39;))</code></pre><p>统计并打印前n位高频字的频率以及字频总合</p><pre><code>#传入参数ndef sta(n,filename):    #..........................统计............................#    # 创建字典，储存每个高频字及其对应的覆盖率    rate = {}    # 统计所有高频字出现的总次数(高频字的总字数),统计频数前n位的字出现的次数    number = 0    #复制,将copy_dict转换成列表并排序    my_dict=sta_word(filename)    copy_dict=my_dict    copy_dict=sorted(copy_dict.items(),key=(lambda x:x[1]),reverse=True)    for word in my_dict.keys():        if my_dict.get(word, 0) &gt;=(copy_dict[n-1][1]) :            rate[word] = my_dict.get(word, 0)/len(text)            number = number + my_dict.get(word, 0)        else:            continue    #..........................输出...........................#        # 将字典列表化    items1 = list(rate.items())        # 对列表按照从大到小的顺序来排序    items1=sorted(items1,key=(lambda x:x[1]),reverse=True)    print(f&quot;频数前{n}位的高频字的频率如下：&quot;.format(n))    #打印前n位的高频字及其频率    for i in range(len(items1)):        word, count = items1[i]        print(word, &quot;  &quot;, &#39;%.2f%%&#39; % (count * 100))      #打印高频字的总的频数和频率#     print(f&quot;前{n}位高频字的频数是：{number}&quot;.format(n,number))    print(&quot;\n&quot;)# sta(100,&#39;ex_menzi.txt&#39;)</code></pre><p>统计前n位高频字的字频总合</p><pre><code>#输入参数ndef sta2(n,filename):    #.....................统计....................#    # 创建字典，储存每个高频字及其对应的覆盖率    rate = {}           # 统计所有高频字出现的总次数(高频字的总字数),统计频数前n位的字出现的次数    number = 0       #复制,将copy_dict转换成列表并排序    my_dict=sta_word(filename)    copy_dict=my_dict    copy_dict=sorted(copy_dict.items(),key=(lambda x:x[1]),reverse=True)    for word in my_dict.keys():        if my_dict.get(word, 0) &gt;=(copy_dict[n-1][1]) :                     rate[word] = my_dict.get(word, 0)/len(text)            number = number + my_dict.get(word, 0)        else:            continue    print(f&quot;前{n}位高频字的字频总合是{number}&quot;.format(n,number))    print(&quot;\n&quot;)#sta2(100,&#39;ex_menzi.txt&#39;)</code></pre><p>统计汉字的熵值</p><pre><code>def sta3(filename):    # 创建字典，储存每个高频字及其对应的覆盖率    rate2 = {}           #熵值初始化为0    s=0    #复制,将copy_dict转换成列表并排序    my_dict=sta_word(filename)    copy_dict2=my_dict    copy_dict2=sorted(copy_dict2.items(),key=(lambda x:x[1]),reverse=True)    for word in my_dict.keys():              rate2[word] = my_dict.get(word, 0)/len(text)    items2=list(rate2.items())        for i in range(len(items2)):        s-=(items2[i][1]*log(items2[i][1],2))    print(f&quot;汉字的熵是：{s}&quot;.format(s))    print(&quot;\n&quot;)# sta3(&#39;ex_menzi.txt&#39;)</code></pre><p>今天把几个函数封装了下，重新发上来。核心函数实现了，再套个main函数就ok了。</p><h4 id="2-英文单词"><a href="#2-英文单词" class="headerlink" title="2. 英文单词"></a>2. 英文单词</h4><p>英文单词的其实和中文的差不多。这里需要注意，<code>set</code>函数返回的是字符的种类，如果用在英文语料里面，统计的是字母的种类的而非单词。汉字语句的最小单位是字，英文语句的是字母。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;NLP课程week1实验&lt;/p&gt;
&lt;h2 id=&quot;总述&quot;&gt;&lt;a href=&quot;#总述&quot; class=&quot;headerlink&quot; title=&quot;总述&quot;&gt;&lt;/a&gt;总述&lt;/h2&gt;&lt;h4 id=&quot;PS-代码写得比较散-封装一下会好看些嘿嘿&quot;&gt;&lt;a href=&quot;#PS-代码写得比较散-封
      
    
    </summary>
    
    
    
      <category term="learn" scheme="http://qaz.jlthzy.cc/tags/learn/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://qaz.jlthzy.cc/2020/04/09/hello-world/"/>
    <id>http://qaz.jlthzy.cc/2020/04/09/hello-world/</id>
    <published>2020-04-09T07:47:38.654Z</published>
    <updated>2020-04-09T09:41:16.535Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
      <category term="see the world" scheme="http://qaz.jlthzy.cc/tags/see-the-world/"/>
    
  </entry>
  
</feed>
